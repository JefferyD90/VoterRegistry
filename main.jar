import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.util.UUID;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.stage.Stage;

public class VoterRegistrationForm extends Application {

    static final String DB_URL = "jdbc:postgresql://localhost/voters";
    static final String USER = "postgres";
    static final String PASS = "password";

    @Override
    public void start(Stage primaryStage) {
        GridPane form = new GridPane();
        form.setAlignment(Pos.CENTER);
        form.setHgap(10);
        form.setVgap(10);
        form.setPadding(new Insets(25, 25, 25, 25));

        Label firstNameLabel = new Label("First Name:");
        form.add(firstNameLabel, 0, 0);
        TextField firstNameField = new TextField();
        form.add(firstNameField, 1, 0);

        Label lastNameLabel = new Label("Last Name:");
        form.add(lastNameLabel, 0, 1);
        TextField lastNameField = new TextField();
        form.add(lastNameField, 1, 1);

        Label phoneNumberLabel = new Label("Phone Number:");
        form.add(phoneNumberLabel, 0, 2);
        TextField phoneNumberField = new TextField();
        form.add(phoneNumberField, 1, 2);

        Label addressLabel = new Label("Address:");
        form.add(addressLabel, 0, 3);
        TextField addressField = new TextField();
        form.add(addressField, 1, 3);

        Label zipCodeLabel = new Label("Zip Code:");
        form.add(zipCodeLabel, 0, 4);
        TextField zipCodeField = new TextField();
        form.add(zipCodeField, 1, 4);

        Label identificationMethodLabel = new Label("Identification Method:");
        form.add(identificationMethodLabel, 0, 5);
        TextField identificationMethodField = new TextField();
        form.add(identificationMethodField, 1, 5);

        Label identificationNumberLabel = new Label("Identification Number:");
        form.add(identificationNumberLabel, 0, 6);
        TextField identificationNumberField = new TextField();
        form.add(identificationNumberField, 1, 6);

        Label partyLabel = new Label("Party:");
        form.add(partyLabel, 0, 7);
        TextField partyField = new TextField();
        form.add(partyField, 1, 7);
        
        Button submitButton = new Button("Submit");
        HBox submitButtonContainer = new HBox(10);
        submitButtonContainer.setAlignment(Pos.BOTTOM_RIGHT);
        submitButtonContainer.getChildren().add(submitButton);
        form.add(submitButtonContainer, 1, 8);

        Scene scene = new Scene(form, 500, 500);
        primaryStage.setTitle("Voter Registration Form");

        submitButton.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
                Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
                alert.setTitle("Confirm Submission");
                alert.setHeaderText("Please confirm the information to be submitted");
                alert.setContentText("First Name: " + firstNameField.getText() + 
                                     "\nLast Name: " + lastNameField.getText() + 
                                     "\nPhone Number: " + phoneNumberField.getText() +
                                     "\nAddress: " + addressField.getText() +
                                     "\nZip Code: " + zipCodeField.getText() +
                                     "\nIdentification Method: " + identificationMethodField.getValue() +
                                     "\nIdentification Number: " + identificationNumberField.getText() +
                                     "\nParty: " + partyField.getValue());

                Optional<ButtonType> result = alert.showAndWait();
                if (result.get() == ButtonType.OK){
                
            String firstName = firstNameField.getText();
            String lastName = lastNameField.getText();
            String phoneNumber = phoneNumberField.getText();
            String address = addressField.getText();
            String zipCode = zipCodeField.getText();
            String city = "";
            String state = "";
            String identificationMethod = identificationMethodField.getText();
            String identificationNumber = identificationNumberField.getText();
            String party = partyField.getText();
            String voterGuid = UUID.randomUUID().toString();
            LocalDateTime dateRegistered = LocalDateTime.now();
            LocalDateTime expirationDate = dateRegistered.plusYears(5);
                }
            }
        });
        submitButton.setOnAction(event -> {


String zipCode = zipCodeField.getText();
String query = "SELECT city, state FROM zip_codes WHERE zip_code = ?";

try (Connection con = DriverManager.getConnection(DB_URL, USER, PASS);
     PreparedStatement ps = con.prepareStatement(query)) {
    ps.setString(1, zipCode);
    ResultSet rs = ps.executeQuery();
    if (rs.next()) {
        String city = rs.getString("city");
        String state = rs.getString("state");

        // Set the city and state fields based on the information from the database
        cityField.setText(city);
        stateField.setText(state);
    } else {
        // No match found in the database
    }
} catch (SQLException e) {
    // Handle SQL exceptions
}

            
            Connection conn = null;
            PreparedStatement stmt = null;
            try {
                Class.forName("org.postgresql.Driver");
                conn = DriverManager.getConnection(DB_URL, USER, PASS);
                String sql = "INSERT INTO voters (voter_guid, first_name, last_name, phone_number, address, city, state, zip_code, identification_method, identification_number, party, date_registered, expiration_date) "
                           + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
                stmt = conn.prepareStatement(sql);
                stmt.setString(1, voterGuid);
                stmt.setString(2, firstName);
                stmt.setString(3, lastName);
                stmt.setString(4, phoneNumber);
                stmt.setString(5, address);
                stmt.setString(6, city);
                stmt.setString(7, state);
                stmt.setString(8, zipCode);
                stmt.setString(9, identificationMethod);
                stmt.setString(10, identificationNumber);
                stmt.setString(11, party);
                stmt.setObject(12, dateRegistered);
                stmt.setObject(13, expirationDate);
                stmt.executeUpdate();
                System.out.println("Record inserted into voters table");
            } catch (SQLException | ClassNotFoundException e) {
                e.printStackTrace();
            } finally {
                try {
                    if (stmt != null) stmt.close();
                    if (conn != null) conn.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        });

        primaryStage.setScene(scene);
        primaryStage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
