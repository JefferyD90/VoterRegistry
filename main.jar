import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.UUID;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.stage.Stage;

public class VoterRegistrationForm extends Application {

  // Connection parameters
  static final String DB_URL = "jdbc:postgresql://localhost:5432/voter_registration";
  static final String USER = "postgres";
  static final String PASS = "password";

  @Override
  public void start(Stage primaryStage) {
    // Set up the form
    GridPane form = new GridPane();
    form.setAlignment(Pos.CENTER);
    form.setHgap(10);
    form.setVgap(10);
    form.setPadding(new Insets(25, 25, 25, 25));

    // Add the form labels and fields
    Label firstNameLabel = new Label("First Name:");
    form.add(firstNameLabel, 0, 0);
    TextField firstNameField = new TextField();
    form.add(firstNameField, 1, 0);

    Label lastNameLabel = new Label("Last Name:");
    form.add(lastNameLabel, 0, 1);
    TextField lastNameField = new TextField();
    form.add(lastNameField, 1, 1);

    Label phoneNumberLabel = new Label("Phone Number:");
    form.add(phoneNumberLabel, 0, 2);
    TextField phoneNumberField = new TextField();
    form.add(phoneNumberField, 1, 2);

    Label addressLabel = new Label("Address:");
    form.add(addressLabel, 0, 3);
    TextField addressField = new TextField();
    form.add(addressField, 1, 3);

    Label cityLabel = new Label("City:");
    form.add(cityLabel, 0, 4);
    TextField cityField = new TextField();
    form.add(cityField, 1, 4);

    Label zipCodeLabel = new Label("Zip Code:");
    form.add(zipCodeLabel, 0, 5);
    TextField zipCodeField = new TextField();
    form.add(zipCodeField, 1, 5);

    Label stateLabel = new Label("State:");
    form.add(stateLabel, 0, 6);
    TextField stateField = new TextField();
    form.add(stateField, 1, 6);

    Label identificationMethodLabel = new Label("Identification Method:");
    form.add(identificationMethodLabel, 0, 5);
    TextField identificationMethodField = new TextField();
    form.add(identificationMethodField, 1, 5);

    Label identificationNumberLabel = new Label("Identification Number:");
    form.add(identificationNumberLabel, 0, 6);
    TextField identificationNumberField = new TextField();
    form.add(identificationNumberField, 1, 6);
    
    Label partyLabel = new Label("Party:");
    form.add(partyLabel, 0, 7);
    TextField partyField = new TextField();
    form.add(partyField, 1, 7);

    Button submitButton = new Button("Submit");
    HBox submitBox = new HBox(10);
    submitBox.setAlignment(Pos.BOTTOM_RIGHT);
    submitBox.getChildren().add(submitButton);
    form.add(submitBox, 1, 8);

    submitButton.setOnAction(event -> {
      try {
        // Connect to the database
        Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);

        // Get the form data
        String firstName = firstNameField.getText();
        String lastName = lastNameField.getText();
        String phoneNumber = phoneNumberField.getText();
        String address = addressField.getText();
        String zipCode = zipCodeField.getText();
        String identificationMethod = identificationMethodField.getText();
        String identificationNumber = identificationNumberField.getText();
        String party = partyField.getText();

        // Get the current UTC time
        LocalDateTime now = LocalDateTime.now();

        // Generate a voter GUID
        String voterGUID = UUID.randomUUID().toString();

        // Set the expiration date to 5 years after the submit date
        LocalDateTime expirationDate = now.plusYears(5);

        // Insert the data into the database
        String sql = "INSERT INTO voters (voter_guid, first_name, last_name, phone_number, address, zip_code, identification_method, identification_number, party, date_registered, expiration_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        PreparedStatement pstmt = conn.prepareStatement(sql);
        pstmt.setString(1, voterGUID);
        pstmt.setString(2, firstName);
        pstmt.setString(3, lastName);
        pstmt.setString(4, phoneNumber);
        pstmt.setString(5, address);
        pstmt.setString(6, zipCode);
        pstmt.setString(7, identificationMethod);
        pstmt.setString(8, identificationNumber);
        pstmt.setString(9, party);
        pstmt.setObject(10, now);
        pstmt.setObject(11, expirationDate);
        pstmt.executeUpdate();

        // Close the connection
        conn.close();

        // Clear the form fields
        firstNameField.clear();
        lastNameField.clear();
        phoneNumberField.clear();
        addressField.clear();
        zipCodeField.clear();
        identificationMethodField.clear();
        identificationNumberField.clear();
        partyField.clear();
      } catch (SQLException e) {
        e.printStackTrace();
      }
    });

    Scene scene = new Scene(form, 400, 500);
    primaryStage.setTitle("Voter Registration Form");
    primaryStage.setScene(scene);
    primaryStage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
